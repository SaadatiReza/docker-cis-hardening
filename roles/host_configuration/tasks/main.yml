---
- name: "1.1 - Create separate partition for containers"
  block:
    - name: Check if separate partition exists
      command: mount | grep /var/lib/docker
      register: docker_partition
 #     ignore_errors: yes
      changed_when: false

    - name: Warn if no separate partition
      debug:
        msg: "WARNING: /var/lib/docker is not on a separate partition (CIS 1.1)"
      when: docker_partition.rc != 0

- name: "1.2 - Use the updated Linux Kernel"
  block:
    - name: Check kernel version
      command: uname -r
      register: kernel_version
      changed_when: false

    - name: Verify kernel version meets requirements
      assert:
        that:
          - kernel_version.stdout is version('3.10', '>=')
        quiet: yes
        success_msg: "Kernel version meets requirements ({{ kernel_version.stdout }})"
        fail_msg: "Kernel version does not meet minimum requirements (CIS 1.2)"

- name: "1.3 - Audit Docker daemon"
  block:
    - name: Ensure auditd is installed
      package:
        name: auditd
        state: present

    - name: Add audit rule for docker daemon
      lineinfile:
        path: /etc/audit/rules.d/docker.rules
        line: "{{ item }}"
        create: yes
      loop: "{{ auditd_rules }}"
      notify: restart auditd

- name: "1.4 - Audit Docker files and directories"
  block:
    - name: Ensure audit rules for Docker files
      lineinfile:
        path: /etc/audit/rules.d/docker.rules
        line: "{{ item }}"
        create: yes
      loop: "{{ auditd_rules }}"
      notify: restart auditd

- name: "1.5 - Audit /etc/default/docker"
  block:
    - name: Check if /etc/default/docker exists
      stat:
        path: /etc/default/docker
      register: default_docker

    - name: Add audit rule if file exists
      lineinfile:
        path: /etc/audit/rules.d/docker.rules
        line: "-w /etc/default/docker -p rwxa -k docker"
        create: yes
      when: default_docker.stat.exists
      notify: restart auditd

- name: "1.6 - Audit docker.sock"
  block:
    - name: Add audit rule for docker.sock
      lineinfile:
        path: /etc/audit/rules.d/docker.rules
        line: "-w /var/run/docker.sock -p rwxa -k docker"
        create: yes
      notify: restart auditd

- name: "1.7 - Audit docker.service"
  block:
    - name: Add audit rule for docker.service
      lineinfile:
        path: /etc/audit/rules.d/docker.rules
        line: "-w /usr/lib/systemd/system/docker.service -p rwxa -k docker"
        create: yes
      notify: restart auditd

- name: "1.8 - Audit containerd.sock"
  block:
    - name: Check if containerd.sock exists
      stat:
        path: /run/containerd/containerd.sock
      register: containerd_sock

    - name: Add audit rule if containerd.sock exists
      lineinfile:
        path: /etc/audit/rules.d/docker.rules
        line: "-w /run/containerd/containerd.sock -p rwxa -k docker"
        create: yes
      when: containerd_sock.stat.exists
      notify: restart auditd

- name: "1.9 - Audit docker.socket"
  block:
    - name: Check if docker.socket unit exists
      stat:
        path: /usr/lib/systemd/system/docker.socket
      register: docker_socket

    - name: Add audit rule if docker.socket exists
      lineinfile:
        path: /etc/audit/rules.d/docker.rules
        line: "-w /usr/lib/systemd/system/docker.socket -p rwxa -k docker"
        create: yes
      when: docker_socket.stat.exists
      notify: restart auditd

- name: "1.10 - Audit /etc/docker/daemon.json"
  block:
    - name: Add audit rule for daemon.json
      lineinfile:
        path: /etc/audit/rules.d/docker.rules
        line: "-w /etc/docker/daemon.json -p rwxa -k docker"
        create: yes
      notify: restart auditd

- name: "1.11 - Audit /usr/bin/docker-runc"
  block:
    - name: Check if docker-runc exists
      stat:
        path: /usr/bin/docker-runc
      register: docker_runc

    - name: Add audit rule if docker-runc exists
      lineinfile:
        path: /etc/audit/rules.d/docker.rules
        line: "-w /usr/bin/docker-runc -p rwxa -k docker"
        create: yes
      when: docker_runc.stat.exists
      notify: restart auditd